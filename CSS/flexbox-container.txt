Docs
https://www.w3schools.com/css/css3_flexbox.asp



===============================================================================================

The Flexible Box Layout Module, makes it easier to design flexible 
responsive layout structure without using float or positioning.


Flexbox Elements:
- Container
- Items
- Responsive



============================================================================================== Flexbox Container


The flex container becomes flexible by setting the display property to flex:

Example:
.flex-container {
  display: flex;
}


A Flexible Layout must have a parent element with the display property set to flex.
Direct child elements(s) of the flexible container automatically becomes flexible items.


The flex container properties are:

• flex-direction
    The flex-direction property defines in which direction the container wants to stack the flex items.
    Example
    The column value stacks the flex items vertically (from top to bottom):

    .flex-container {
     display: flex;
     flex-direction: column;                 # or flex-direction: column-reverse to display items vertically (but from bottom to top)
    }

    # To stack the items horizontally type "row" or "row-reverse" instead of column

• flex-wrap
    The flex-wrap property specifies whether the flex items should wrap or not.
    Example
    The wrap value specifies that the flex items will wrap if necessary:

    .flex-container {
     display: flex;
     flex-wrap: wrap;
    }

    # If you want to specify that they shouldn't wrap, use "now-wrap"
    # "wrap-reverse" works the same as before


• flex-flow
    The flex-flow property is a shorthand property for setting both the flex-direction and flex-wrap properties.

    Example
    .flex-container {
     display: flex;
     flex-flow: row wrap;
    }


• justify-content
    The justify-content property is used to align the flex items
    Example
    The center value aligns the flex items at the center of the container:

    .flex-container {
     display: flex;
     justify-content: center;
    }

    # justify-content: flex-start => beginning of the container
    # justify-content: flex-end => end of the container
    # justify-content: space-around =>  space before, between, and after the lines
    # justify-content: space-between =>  space between the lines (not at the margins)


• align-items
    The align-items property is used to align the flex items.
    Example
    The center value aligns the flex items in the middle of the container:

    .flex-container {
     display: flex;
     height: 200px;
     align-items: center;
    }

# The stretch value stretches the flex items to fill the container (this is default)
# The baseline value aligns the flex items such as their baselines aligns:


• align-content


• Perfect Centering
    In the following example we will solve a very common style problem: perfect centering.
    SOLUTION: Set both the justify-content and align-items properties to center, and the flex item will be perfectly centered:

    Example
    .flex-container {
     display: flex;
     height: 300px;
     justify-content: center;
     align-items: center;
    } 