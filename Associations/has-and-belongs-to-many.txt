// Docs:
https://guides.rubyonrails.org/association_basics.html#the-has-and-belongs-to-many-association
https://api.rubyonrails.org/v7.0.4/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_and_belongs_to_many

// Youtube:
https://www.youtube.com/watch?v=4yXcBKih7dA


================================================================================ Explanation


# A has_and_belongs_to_many association creates a direct many-to-many connection with another model, 
with no intervening model. But requires a join table to support the association

<!-- The simplest rule of thumb is that you should set up a has_many :through relationship 
    if you need to work with the relationship model as an independent entity. 
    If you don't need to do anything with the relationship model, it may be simpler to set up 
    a has_and_belongs_to_many relationship 
    (though you'll need to remember to create the joining table in the database). -->

<!-- You should use has_many :through if you need validations, callbacks, 
    or extra attributes on the join model. You should use has_and_belongs_to when you 
    just want to connect the two models directly -->

# For example a student can enroll to many courses, and a course can have multiple students. (Udemy)
# You must generate the join table with a migration independently of a model.

====================================================================================


// Initial Set up

$ rails new <app_name>
$ rails g scaffold students first_name:string last_name:string email:string
$ rails g scaffold course name:string description:text

$ rails db:migrate