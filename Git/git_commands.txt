GitHub Commands

// Create a new repository -> 

Go to “+” >> new repository >> Name the repository specifically >> set to public  >> add README >> Create Repository button


  // On the terminal:
	$ mkdir <directory_name>        	  # Create a Directory any name. Ex. mkdir PROJECTS
 	$ cd <directory_name>            	  # Change to the directory created. cd PROJECTS
	$ git clone <github_repository_link>      # Clone repository to local
   Ex. git clone https://github.com/rafaellevis07/Study-Jun-2022-Blog.git

   // or
	$ git init								  # It will  creates a new Git repository locally
	
	$ ls                                      # List items inside directory
	$ cd <repository_name>			  		  # Change to the repository that was cloned
	$ git status				  			  # Check git status. If there is any changes to push
	$ git add . 	/ git add -A		 	  # Add new or changed files in your working directory to the Git staging area.
	$ git add <file_name> 				 	  # Add determined file
  	$ git commit -m "<commit_message>"	 	  # Describe what was created or changes
	$ git log				 				  # log of commit messages
	$ git reset --hard HEAD~1		  		  # Delete last commit. (Without number 1 deletes all recent changes)
 	$ git push				  		  		  # Upload the commits to Github
	$ git reset								  # unstage all changes
	$ git reset	<file>						  # unstage specific file
	$ git rm --cached <file>				  # Ignore file previously tracked by git
 



================================================================================================

// Dealing with a branch:
    $ git checkout -b <branch-name>                   # Switched to a new branch 'modify-README'
    $ git commit -a -m "Improve the README file"      # commit all modifications and leaves a message
    $ git checkout <branch-name>                      # Switched to branch 'main'
    $ git merge <branch-name>                         # merges branches
    $ git branch -d <branch-name>                     # Deleted branch <branch-name>
    $ git branch -D                                   # abandon the topic branch changes
    $ git push                                        # upload local repository content to a remote repository.
    $ git push heroku main                            # push the main branch up to Heroku
    
	

====================================================================================================


